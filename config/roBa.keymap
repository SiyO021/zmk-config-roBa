#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <5>;
    snipe-layers = <7>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <32 33>;
        };

        multiply {
            bindings = <&kp ASTERISK>;
            key-positions = <20 21>;
        };

        trans {
            bindings = <&kp LC(SPACE)>;
            key-positions = <3 4>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        // scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
        //     compatible = "zmk,behavior-sensor-rotate";
        //     #sensor-binding-cells = <0>;
        //     bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        // 追加: スクロールのタップ時間を設定 (20ms)
        //     tap-ms = <20>;
        // };

        // rot_scroll: rot_scroll {
        //     compatible = "zmk,behavior-sensor-rotate-var";
        //     #sensor-binding-cells = <2>;
        //     bindings = <&msc>, <&msc>;

        //     tap-ms = <10>;   // 5–20ms目安
        // };

        enc_scroll: behavior_sensor_rotate {
          compatible = "zmk,behavior-sensor-rotate";
          #sensor-binding-cells = <0>;
          bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
          tap-ms = <50>;     // 40–60の範囲で調整
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        //test_rot: behavior_sensor_rotate {
        //    compatible = "zmk,behavior-sensor-rotate";
        //    #sensor-binding-cells = <0>;
        //    bindings = <&kp F20>, <&kp F21>;
        //    tap-ms = <40>;
        //};
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W         &kp E         &kp R                    &kp T                                                                  &kp Y        &kp U  &lt 5 I    &kp O    &mt LSHFT P
&kp A                  &kp S         &kp D         &kp F                    &kp G                   &kp LS(LG(S))                   &kp SQT        &kp H        &kp J  &kp K      &kp L    &lt 4 MINUS
&mt LEFT_SHIFT Z       &kp X         &kp C         &kp V                    &kp B                   &lt_to_layer_0 6 BACKSLASH      &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &mt LCTRL SLASH
&mt LEFT_SHIFT ESCAPE  &kp LEFT_GUI  &kp LEFT_ALT  &mt LEFT_CONTROL DELETE  &lt_to_layer_0 3 SPACE  &lt_to_layer_0 7 TAB            &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&rot_scroll SCRL_UP SCRL_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                &kp N7        &kp N8        &kp N9        &kp PLUS                                                   &kp AMPERSAND    &kp TILDE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET
&kp SLASH                &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp HASH         &kp DOLLAR   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH
&trans                   &trans        &trans        &trans        &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp TAB         &kp UP_ARROW    &kp LS(LEFT_ALT)  &kp LEFT_ALT                      &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp END       &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans          &kp LEFT_GUI    &kp LG(TAB)       &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans            &trans        &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        CHANGE_DEVICE {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        SNIPE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
